{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReversed","visibleGoods","goodsFrom","goods","sort","a","b","localeCompare","length","getPreparedGoods","reset","getReset","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAgCF,IAAMC,EAAkB,OAClBC,EAAoB,SAEbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA+BF,oBAAS,GAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EApCR,SAA0BC,EAAWL,EAAWE,GAC9C,IAAMI,EAAK,YAAOD,GAqBlB,OAnBIL,GACFM,EAAMC,MAAK,SAACC,EAAGC,GACb,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAEE,cAAcD,GAEzB,KAAKZ,EACH,OAAOW,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXT,GACFI,EAAMJ,UAGDI,EAccM,CAAiBjB,EAAiBK,EAAWE,GAC5DW,EAZR,SAAkBb,EAAWE,GAC3B,MAAqB,KAAdF,GAAoBE,EAWbY,CAASd,EAAWE,GAOlC,OACE,mCACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEf,IAAcJ,EACV,iBACA,0BAENqB,QAAS,kBAAMhB,EAAaL,IAP9B,iCAYA,wBACEoB,KAAK,SACLD,UACEf,IAAcH,EACV,iBACA,0BAENoB,QAAS,kBAAMhB,EAAaJ,IAP9B,4BAYA,wBACEmB,KAAK,SACLD,UAAWb,EAAU,iBAAmB,0BACxCe,QAAS,kBAAMd,GAAaD,IAH9B,qBAQCW,GACC,wBACEG,KAAK,SACLD,UAAU,4BACVE,QA7CM,WAChBd,GAAY,GACZF,EAAa,KAwCL,sBAUJ,6BACGG,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cC5GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2201473e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { useState } from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goodsFrom, sortField, reverse) {\n  const goods = [...goodsFrom];\n\n  if (sortField) {\n    goods.sort((a, b) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return a.localeCompare(b);\n\n        case SORT_FIELD_LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    goods.reverse();\n  }\n\n  return goods;\n}\n\nfunction getReset(sortField, reverse) {\n  return sortField !== '' || reverse;\n}\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, reverse);\n  const reset = getReset(sortField, reverse);\n\n  const resetSort = () => {\n    setReversed(false);\n    setSortField('');\n  };\n\n  return (\n    <>\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortField === SORT_FIELD_NAME\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={() => setSortField(SORT_FIELD_NAME)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              sortField === SORT_FIELD_LENGTH\n                ? 'button is-info'\n                : 'button is-info is-light'\n            }\n            onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={reverse ? 'button is-info' : 'button is-info is-light'}\n            onClick={() => setReversed(!reverse)}\n          >\n            Reverse\n          </button>\n\n          {reset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetSort}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}